diretorio <= file.choose()
diretorio = file.choose()
diretorio
head(diretorio)
tail(diretorio)
tail(diretorio)
head(diretorio)
read.csv()
x = read.csv(file.choose(), header = TRUE, sep = ";")
x
clear
cls
asdsad
library(xlsx)
library("xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
x2 = read.xlsx(file.choose(), sheetindex = 1)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
Sys.setenv(JAVA_HOME="C:\\Program Files\\Java\\jre1.8.0_231")
install.packages("xlsx")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre1.8.0_201")
install.packages("xlsx")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre1.8.0_201")
install.packages("xlsx")
install.packages('xlsx', lib='\\network\R\library')
install.packages('xlsx', lib='\\network\\R\\library')
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
shiny::runApp('D:/Alexandre/Estudos/CursoShineComRLocal/AppTeste')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='cursorcomshinytrapp', token='9B8420B6CF0109C69DC381BDAFF97569', secret='zD5kwffm/okOeTBZ31JxJdHs0WI4vzZ2IyocjLfJ')
rsconnect::setAccountInfo(name='cursorcomshinytrapp', token='9B8420B6CF0109C69DC381BDAFF97569', secret='zD5kwffm/okOeTBZ31JxJdHs0WI4vzZ2IyocjLfJ')
runApp('D:/Alexandre/Estudos/CursoPowerBIMachineLearningR/ShineComRLocal/AppTeste')
runApp('D:/Alexandre/Estudos/CursoPowerBIMachineLearningR/ShineComRLocal/AppTeste')
rsconnect::setAccountInfo(name='cursorcomshinytrapp', token='9B8420B6CF0109C69DC381BDAFF97569', secret='zD5kwffm/okOeTBZ31JxJdHs0WI4vzZ2IyocjLfJ')
getwd()
> getwd()
getwd()
Setwd("D:\Alexandre\Estudos\PrevisaoCustosAberturaFranquiaComR")
Setwd("D:\\Alexandre\\Estudos\\PrevisaoCustosAberturaFranquiaComR\\")
setwd("D:\\Alexandre\\Estudos\\PrevisaoCustosAberturaFranquiaComR\\")
setwd("D:\\Alexandre\\Estudos\\PrevisaoCustosAberturaFranquiaComR\\")
getwd()
getwd()
getwd()
library(shiny)
dados = read.csv("\\Modelos\\slr12.csv",sep = ";")
dados = read.csv("Modelos\\slr12.csv",sep = ";")
dados
library(shiny)
dados
dados
modelo = lm(CusInic ~ FrqAnual, data=dados)
modelos
modelo
library(shiny)
# UI do app pra exibir o histograma
ui <- fluidPage(
#título do app
titlePanel("Previsão de custo inicial para montar uma franquia"),
fluidRow(
column(4,
h2("Dados"),
tableOutput("Dados")
),
column(8,
plotOutput("Graf")
),
),
fluidRow(
column(6,
h3("Valor anual da franquia:"),
numericInput("NovoValor", "Insira um novo valor", 1500, min=1, max=9999999),
actionButton("Processar", "Processar")
),
column(6,
h1(textOutput("Resultado"))
),
)
)
library(shiny)
# UI do app pra exibir o histograma
ui <- fluidPage(
#título do app
titlePanel("Previsão de custo inicial para montar uma franquia"),
fluidRow(
column(4,
h2("Dados"),
tableOutput("Dados")
),
column(8,
plotOutput("Graf")
),
),
fluidRow(
column(6,
h3("Valor anual da franquia:"),
numericInput("NovoValor", "Insira um novo valor", 1500, min=1, max=9999999),
actionButton("Processar", "Processar")
),
column(6,
h1(textOutput("Resultado"))
),
)
)
ui <- fluidPage(
#título do app
titlePanel("Previsão de custo inicial para montar uma franquia"),
fluidRow(
column(4,
h2("Dados"),
tableOutput("Dados")
),
column(8,
plotOutput("Graf")
),
),
fluidRow(
column(6,
h3("Valor anual da franquia:"),
numericInput("NovoValor", "Insira um novo valor", 1500, min=1, max=9999999),
actionButton("Processar", "Processar")
),
column(6,
h1(textOutput("Resultado"))
),
)
)
runApp('Documentacao')
library(shiny)
dados = read.csv("Modelos/slr12.csv", sep = ";")
modelo = lm(CusInic ~ FrqAnual, data=dados)
# UI do app pra exibir o histograma
ui <- fluidPage(
#título do app
titlePanel("Previsão de custo inicial para montar uma franquia"),
fluidRow(
column(4,
h2("Dados"),
tableOutput("Dados")
),
column(8,
plotOutput("Graf")
),
),
fluidRow(
column(6,
h3("Valor anual da franquia:"),
numericInput("NovoValor", "Insira um novo valor", 1500, min=1, max=9999999),
actionButton("Processar", "Processar")
),
column(6,
h1(textOutput("Resultado"))
),
)
)
# UI do app pra exibir o histograma
ui <- fluidPage(
#título do app
titlePanel("Previsão de custo inicial para montar uma franquia"),
fluidRow(
column(4,
h2("Dados"),
tableOutput("Dados")
),
column(8,
plotOutput("Graf")
),
),
fluidRow(
column(6,
h3("Valor anual da franquia:"),
numericInput("NovoValor", "Insira um novo valor", 1500, min=1, max=9999999),
actionButton("Processar", "Processar")
),
column(6,
h1(textOutput("Resultado"))
),
)
)
# UI do app pra exibir o histograma
ui = fluidPage(
#título do app
titlePanel("Previsão de custo inicial para montar uma franquia"),
fluidRow(
column(4,
h2("Dados"),
tableOutput("Dados")
),
column(8,
plotOutput("Graf")
),
),
fluidRow(
column(6,
h3("Valor anual da franquia:"),
numericInput("NovoValor", "Insira um novo valor", 1500, min=1, max=9999999),
actionButton("Processar", "Processar")
),
column(6,
h1(textOutput("Resultado"))
),
)
)
source('D:/Alexandre/Estudos/PrevisaoCustosAberturaFranquiaComR/PrevisaoCustosAberturaFranquia/app.R')
# UI do app pra exibir o histograma
ui <- fluidPage(
#título do app
titlePanel("Previsão de custo inicial para montar uma franquia"),
fluidRow(
column(4,
h2("Dados"),
tableOutput("Dados")
),
column(8,
plotOutput("Graf")
),
),
fluidRow(
column(6,
h3("Valor anual da franquia:"),
numericInput("NovoValor", "Insira um novo valor", 1500, min=1, max=9999999),
actionButton("Processar", "Processar")
),
column(6,
h1(textOutput("Resultado"))
),
)
)
runApp('PrevisaoCustosAberturaFranquia')
runApp('PrevisaoCustosAberturaFranquia')
runApp('PrevisaoCustosAberturaFranquia')
